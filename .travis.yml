language: cpp

compiler:
  - gcc
  - clang

os:
  - linux

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "a0oCq1Ga/3Y2dosiwmEOGGXhVWaj959zYi8GuecbKa1yjZwsHZ9rl4Q0ezeUfYndUhmFUlfACyQrky9ALNLnFiuABXdyPrzBM2oGnKs6bmUji3ZpMJVK5tVoXd1Z4uup1LsOGrOzNd/qoDUZR8/aT/w5Br/7iVpLaEc5H+Ru3/CUVbkIy2oMjyffqusmt84QDWQCwbR+NydFGuR9U46tfiZp9kplkmdike5pc7aP4FF+JsoopxhyCZJxrYm6ha1DxieCANyMwkEQhiImvDtvRM0NmpPoaX0TMP8VrdOD7kXf7cq7Jbvj3gImMBuUlcGUE+CApctqF4BVjjvBLWidUWHKsP/KcWhYREDwLIqimJWzS5+LLF7inxtWDI6dpFWBbHh90LGxMemtjTkc6ODbQO4BLF2kRyzcl1cmfLiAscONMYzWRrmLw/Y5aRDqUa+wpGd95Ct6ADG5TVN1Yl2/6kDU0MORrfWU0rqaTMNOuVkULzS1Bcd1gsMCavCjHf2HGcwXcy7zHGj9Gm94OkT0jdTpWzMPUJUEBHhxydKQM8VDJmWzxSt5y/JOcbfETv1cH8g+uNW1+io+6Rc3aILnIwyc2FlPGOCmmibbICxW5d2/vlzFRWruR77lEs02pGVVSsXaIycOgW12KqRY25Pi/WHakiqo0u8E6C5itap68ok="
  matrix:
    -COVERAGE=0
    -COVERAGE=1
  
# Addons for the Coverity static analysis service
addons:
  coverity_scan:
    project:
      name: "Alex-B09/Tostitos"
      description: "Build submitted via Travis CI"
    notification_email: faouellet@gmail.com
    build_command_prepend: "mkdir build; cd build; cmake .."
    build_command:   "make"
    branch_pattern: coverity_scan

# Addons for the latest compilers versions
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.6
    packages:
      - g++-5
      - clang-3.6

before_install:
  - sudo apt-get update -qq
  
install:
  # Getting the latest compiler
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 50
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 50
  - if [ ${CC} == "clang" ]; then
       export CC=/usr/bin/clang-3.6 CXX=/usr/bin/clang++-3.6; 
    fi
    
  # Getting the latest version of Boost Unit Test Framework
  - sudo apt-get install libboost-test-dev
  
  # Getting latest version of LCOV if needed
  - if [[ ${COVERAGE} == 1 ]]; then
       wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz &&
       tar xf lcov_1.11.orig.tar.gz &&
       sudo make -C lcov-1.11/ install &&
       sudo apt-get install ruby1.9.1 ruby1.9.1-dev &&
       sudo apt-get install rubygems1.9.1 irb1.9.1 ri1.9.1&&
       rvmsudo gem install coveralls-lcov;
    fi

before_script:
  # init coverage to 0 (optional)
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --zerocounters

script: 
  - mkdir build
  - cd build
  
  # Debug code coverage Linux build
  - if [[ ${COVERAGE} == 1 && ${COVERITY_SCAN_BRANCH} != 1 ]]; then 
       cmake .. -DCMAKE_BUILD_TYPE=DEBUG;
    fi
  # Release Linux build
  - if [[ ${COVERAGE} != 1 && ${COVERITY_SCAN_BRANCH} != 1 ]]; then 
       cmake .. -DCMAKE_BUILD_TYPE=RELEASE;
    fi
    
  - if [[ ${COVERAGE} == 1 && ${COVERITY_SCAN_BRANCH} != 1 ]]; then 
       make &&
       ctest --verbose;
    fi

after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info
  - lcov --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info
  - lcov --list coverage.info
  - coveralls-lcov coverage.info
  
